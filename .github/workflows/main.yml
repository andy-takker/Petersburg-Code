name: CI
on:
  push:
    branches: [ "main", "back" ]
  pull_request:
    branches: [ "main", "back" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update and re-run system
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_SERVER: ${{ secrets.SSH_SERVER }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          eval `ssh-agent -k` > /dev/null 
          eval `ssh-agent -s` > /dev/null
          echo "start agent"
          echo "$SSH_PRIVATE_KEY" > secret_key
          chmod 600 secret_key
          ssh-add secret_key
          
          SSH_CMD="ssh -T -A -o StrictHostKeyChecking=no $SSH_USER@$SSH_SERVER"
          $SSH_CMD << EOF
            cd petersburg-code/
            git reset --hard
            git pull
            docker-compose build --no-cache
            docker-compose up -d
          EOF
      - name: Send Telegram Bot message
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_GROUP_ID: ${{ secrets.TELEGRAM_GROUP_ID }}
        run: |
          echo "System was updated"
          curl -X POST \
            -H 'Content-Type: application/json' \
            -d '{"parse_mode": "markdown", "chat_id": "'"$TELEGRAM_GROUP_ID"'", "text": "System was updated!\n\n**Commit:** ${{ github.event.head_commit.message }}\n**Author:** ${{ github.event.pusher.name }}"}' \
            "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage"
